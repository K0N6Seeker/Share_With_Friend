<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>CurrentEdge - News Portal</title>
    <!-- Early script to apply dark mode before CSS loads to prevent flicker -->
    <script>
        (function() {
            if (localStorage.getItem('darkMode') === 'enabled') {
                document.documentElement.classList.add('dark-mode');
            }
        })();
    </script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Kanit:wght@300;400;500;600;700&display=swap');
        
        :root {
            --bg-color: #f8f9fa;
            --text-color: #212529;
            --card-bg: #ffffff;
            --card-border: #dee2e6;
            --input-bg: #ffffff;
            --input-text: #212529;
            --input-border: #ced4da;
            --input-placeholder: #6c757d;
            --btn-primary-bg: #0d6efd;
            --btn-primary-border: #0d6efd;
            --btn-danger-bg: #dc3545;
            --btn-danger-border: #dc3545;
            --btn-secondary-bg: #6c757d;
            --btn-secondary-border: #6c757d;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            --transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, transform 0.2s ease;
            --font-family: 'Kanit', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            --accent-color: #4361ee;
            --secondary-accent: #3a0ca3;
            --card-hover: #f8f9fa;
            --badge-bg: #e9ecef;
            --badge-text: #495057;
        }

        .dark-mode {
            --bg-color: #0d1117; 
            --text-color: #c9d1d9; 
            --card-bg: #161b22; 
            --card-border: #30363d; 
            --input-bg: #161b22;
            --input-text: #c9d1d9;
            --input-border: #30363d;
            --input-placeholder: #8b949e; 
            --btn-primary-bg: #4361ee; 
            --btn-primary-border: #4361ee;
            --btn-danger-bg: #f85149; 
            --btn-danger-border: #f85149;
            --btn-secondary-bg: #21262d; 
            --btn-secondary-border: #30363d;
            --shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
            --accent-color: #4cc9f0;
            --secondary-accent: #4895ef;
            --card-hover: #1d232a;
            --badge-bg: #21262d;
            --badge-text: #8b949e;
        }

        body {
            background-color: var(--bg-color);
            color: var(--text-color);
            font-family: var(--font-family);
            padding-top: 3rem;
            transition: var(--transition);
            line-height: 1.6;
            min-height: 100vh;
            position: relative;
            padding-bottom: 3rem;
            background-image: linear-gradient(to bottom, var(--bg-color), var(--bg-color) 85%, var(--card-bg));
        }

        .container {
            max-width: 900px;
        }

        .logo {
            font-size: 2.8rem;
            font-weight: 700;
            color: var(--accent-color);
            transition: var(--transition);
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            letter-spacing: -1px;
            margin-bottom: 0.5rem;
            display: inline-block;
        }

        .logo-subtitle {
            font-size: 1rem;
            color: var(--text-color);
            opacity: 0.7;
            margin-bottom: 2.5rem;
            font-weight: 300;
        }

        .dark-mode .logo {
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
        }

        h5.card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-color);
            transition: var(--transition);
            margin-bottom: 0.75rem;
        }

        .card {
            background-color: var(--card-bg);
            border: 1px solid var(--card-border);
            border-radius: 1rem;
            box-shadow: var(--shadow);
            transition: var(--transition), box-shadow 0.3s ease, transform 0.3s ease;
            margin-bottom: 1.5rem;
            position: relative;
            overflow: hidden;
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 6px;
            height: 100%;
            background: linear-gradient(to bottom, var(--accent-color), var(--secondary-accent));
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
            background-color: var(--card-hover);
        }

        .card:hover::before {
            opacity: 1;
        }

        .dark-mode .card:hover {
            box-shadow: 0 8px 28px rgba(0, 0, 0, 0.4);
        }

        .form-control {
            background-color: var(--input-bg);
            color: var(--input-text);
            border: 1px solid var(--input-border);
            border-radius: 0.75rem;
            padding: 0.75rem 1rem;
            transition: var(--transition);
            font-size: 1rem;
        }

        .form-control::placeholder {
            color: var(--input-placeholder);
            opacity: 0.7;
            font-weight: 300;
        }

        .form-control:focus {
            background-color: var(--input-bg);
            color: var(--input-text);
            border-color: var(--accent-color);
            box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.25);
            outline: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--accent-color), var(--secondary-accent));
            border: none;
            color: #ffffff;
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: var(--transition), transform 0.2s ease;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, var(--secondary-accent), var(--accent-color));
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(67, 97, 238, 0.3);
        }

        .dark-mode .btn-primary:hover {
            box-shadow: 0 4px 10px rgba(76, 201, 240, 0.3);
        }

        .btn-outline-secondary, .btn-outline-danger {
            border-radius: 0.75rem;
            padding: 0.5rem 1rem;
            transition: var(--transition), transform 0.2s ease;
            font-weight: 400;
        }

        .btn-outline-secondary {
            color: var(--text-color);
            border-color: var(--btn-secondary-border);
            background-color: transparent;
        }

        .btn-outline-secondary:hover {
            background-color: var(--btn-secondary-bg);
            color: var(--text-color);
            transform: translateY(-2px);
        }

        .btn-outline-danger {
            color: var(--btn-danger-bg);
            border-color: var(--btn-danger-bg);
        }

        .btn-outline-danger:hover {
            background-color: var(--btn-danger-bg);
            color: #ffffff;
            transform: translateY(-2px);
        }

        .search-form {
            margin-bottom: 2.5rem;
        }

        .input-group {
            box-shadow: var(--shadow);
            border-radius: 0.75rem;
            overflow: hidden;
        }

        .input-group .btn-outline-secondary {
            background-color: var(--card-bg);
            border-color: var(--input-border);
            border-radius: 0 0.75rem 0.75rem 0;
            border-left: none;
        }

        .input-group .btn-outline-secondary:hover {
            background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: white;
        }

        .input-group .form-control {
            border-radius: 0.75rem 0 0 0.75rem;
            border-right: none;
        }

        .note-content {
            color: var(--text-color);
            opacity: 0.9;
            transition: var(--transition);
            margin-bottom: 1rem;
            font-weight: 300;
        }

        /* Dark mode toggle button */
        #darkModeToggle {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
            border-radius: 50%;
            padding: 0;
            background-color: var(--card-bg);
            border: 1px solid var(--card-border);
            transition: var(--transition), transform 0.2s ease;
            box-shadow: var(--shadow);
        }

        #darkModeToggle:hover {
            transform: scale(1.1) rotate(15deg);
            background-color: var(--card-hover);
        }

        #darkModeToggle i {
            font-size: 1.2rem;
            margin: 0;
            color: var(--text-color);
        }

        /* Animations for cards */
        .card {
            animation: fadeIn 0.5s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(15px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* Form validation */
        .form-control:invalid {
            border-color: var(--btn-danger-bg);
        }

        .dark-mode .form-control:invalid {
            border-color: #f85149;
        }

        /* Card action buttons */
        .card-actions {
            display: flex;
            gap: 0.5rem;
        }

        .btn-group .btn {
            border-radius: 0.75rem;
            margin-left: 0.25rem;
        }

        .header-container {
            text-align: center;
            margin-bottom: 2rem;
        }

        /* Add card styles */
        .add-card {
            border-top: 4px solid var(--accent-color);
        }

        .add-card .card-title {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--accent-color);
        }

        .form-text#wordCount {
            font-size: 0.95rem;
            color: var(--accent-color);
            margin-top: 0.25rem;
        }

        /* Mobile responsive */
        @media (max-width: 768px) {
            .btn-group {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }
            
            .btn-group .btn {
                margin-left: 0;
                width: 100%;
            }
            
            .card-body {
                flex-direction: column;
            }
            
            .card-actions {
                margin-top: 1rem;
                width: 100%;
            }

            .logo {
                font-size: 2.2rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="d-flex justify-content-end mb-4">
            <button id="darkModeToggle" class="btn btn-sm" aria-label="สลับโหมดมืด">
                <i id="darkModeIcon" class="bi bi-moon-stars-fill"></i>
            </button>
        </div>

        <div class="header-container">
            <h1 class="logo">CurrentEdge</h1>
        </div>

        <form class="input-group search-form" method="GET" action="/">
            <input type="text" name="q" class="form-control" placeholder="ค้นหาด้วยหัวข้อข่าว..." value="<%= q %>">
            <button class="btn btn-outline-secondary" type="submit">
                <i class="bi bi-search"></i> ค้นหา
            </button>
        </form>

        <div class="card mb-5 add-card">
            <div class="card-body">
                <h5 class="card-title mb-4"><i class="bi bi-plus-circle-fill"></i> เพิ่มข่าวใหม่</h5>
                <form action="/add" method="POST">
                    <div class="mb-3">
                        <input name="title" class="form-control" placeholder="หัวข้อข่าว" required />
                    </div>
                    <div class="mb-4">
                        <textarea name="content" id="newsContent" class="form-control" rows="4" placeholder="เนื้อหาข่าว" required></textarea>
                        <div class="form-text text-end" id="wordCount">0 คำ</div>
                    </div>
                    <button class="btn btn-primary" type="submit"><i class="bi bi-plus-circle"></i> เพิ่มข่าว</button>
                </form>
            </div>
        </div>

        <% notes.forEach(function(n) { %>
            <div class="card mb-3">
                <div class="card-body d-flex justify-content-between align-items-start">
                    <div>
                        <h5 class="card-title"><%= n.title %></h5>
                        <p class="card-text note-content"><%= n.content %></p>
                    </div>
                    <div class="btn-group ms-3 card-actions">
                        <a href="/edit/<%= n.id %>" class="btn btn-sm btn-outline-secondary">
                            <i class="bi bi-pencil"></i> แก้ไข
                        </a>
                        <form action="/delete/<%= n.id %>" method="POST" onsubmit="return confirm('ลบข่าวนี้?');">
                            <button class="btn btn-sm btn-outline-danger" type="submit">
                                <i class="bi bi-trash"></i> ลบ
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>

    <script>
        const darkModeToggle = document.getElementById('darkModeToggle');

        function enableDarkMode() {
            document.documentElement.classList.add('dark-mode');
            localStorage.setItem('darkMode', 'enabled');
            darkModeToggle.innerHTML = '<i class="bi bi-sun-fill"></i>';
        }

        function disableDarkMode() {
            document.documentElement.classList.remove('dark-mode');
            localStorage.setItem('darkMode', 'disabled');
            darkModeToggle.innerHTML = '<i class="bi bi-moon-stars-fill"></i>';
        }

        // Initialize based on saved mode
        if (localStorage.getItem('darkMode') === 'enabled') {
            enableDarkMode();
        } else {
            disableDarkMode();
        }

        darkModeToggle.addEventListener('click', () => {
            if (document.documentElement.classList.contains('dark-mode')) {
                disableDarkMode();
            } else {
                enableDarkMode();
            }
        });

        // Add animations for cards when they come into view
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });
        });

        // Word count for news content textarea
        document.addEventListener('DOMContentLoaded', () => {
            const textarea = document.getElementById('newsContent');
            const wordCount = document.getElementById('wordCount');
            if (textarea && wordCount) {
                const updateCount = () => {
                    const text = textarea.value;
                    const count = text.length;
                    wordCount.textContent = `${count} ตัวอักษร`;
                };
                textarea.addEventListener('input', updateCount);
                updateCount();
            }
        });
    </script>
</body>
</html>